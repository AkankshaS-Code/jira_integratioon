name: Test Update Operations (OAuth)

on:
  workflow_dispatch:
    inputs:
      operation:
        description: 'Update operation to test'
        type: choice
        options:
          - add_comment
          - change_status
          - update_labels
          - update_description
          - all_updates

jobs:
  test-updates:
    runs-on: ubuntu-latest
    steps:
      - name: Create Test Ticket (if testing all)
        if: github.event.inputs.operation == 'all_updates'
        id: create
        run: |
          echo "üìù Creating test ticket for update operations..."
          
          RESPONSE=$(curl -s -X POST \
            "https://api.atlassian.com/ex/jira/${{ secrets.ATLASSIAN_CLOUD_ID }}/rest/api/3/issue" \
            -H "Authorization: Bearer ${{ secrets.ATLASSIAN_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "fields": {
                "project": {"key": "SCRUM"},
                "summary": "[UPDATE-TEST] Testing all update operations",
                "description": {
                  "type": "doc",
                  "version": 1,
                  "content": [{
                    "type": "paragraph",
                    "content": [{
                      "type": "text",
                      "text": "This ticket will be updated with various operations to demonstrate OAuth 2.0 capabilities"
                    }]
                  }]
                },
                "issuetype": {"name": "Task"}
              }
            }')
          
          KEY=$(echo $RESPONSE | jq -r '.key')
          echo "TEST_TICKET=$KEY" >> $GITHUB_ENV
          echo "TICKET_KEY=$KEY" >> $GITHUB_OUTPUT
          echo "‚úÖ Created test ticket: $KEY"
          echo "üîó https://akanksha-singhal.atlassian.net/browse/$KEY"
          
      - name: Set Ticket for Individual Tests
        if: github.event.inputs.operation != 'all_updates'
        run: |
          echo "TEST_TICKET=SCRUM-3" >> $GITHUB_ENV
          echo "Using existing ticket SCRUM-3 for testing"

      - name: UPDATE 1 - Add Comment
        if: github.event.inputs.operation == 'add_comment' || github.event.inputs.operation == 'all_updates'
        run: |
          echo "üí¨ UPDATE Operation: Adding comment..."
          
          TICKET="${{ env.TEST_TICKET }}"
          
          curl -s -X POST \
            "https://api.atlassian.com/ex/jira/${{ secrets.ATLASSIAN_CLOUD_ID }}/rest/api/3/issue/$TICKET/comment" \
            -H "Authorization: Bearer ${{ secrets.ATLASSIAN_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "body": {
                "type": "doc",
                "version": 1,
                "content": [{
                  "type": "paragraph",
                  "content": [{
                    "type": "text",
                    "text": "üí¨ Update Operation Test: Comment added via OAuth 2.0 at '"$(date)"'"
                  }]
                }]
              }
            }'
          
          echo "‚úÖ Comment added successfully"
          sleep 2

      - name: UPDATE 2 - Add More Detailed Comment
        if: github.event.inputs.operation == 'all_updates'
        run: |
          echo "üí¨ UPDATE: Adding detailed progress comment..."
          
          TICKET="${{ env.TEST_TICKET }}"
          
          curl -s -X POST \
            "https://api.atlassian.com/ex/jira/${{ secrets.ATLASSIAN_CLOUD_ID }}/rest/api/3/issue/$TICKET/comment" \
            -H "Authorization: Bearer ${{ secrets.ATLASSIAN_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "body": {
                "type": "doc",
                "version": 1,
                "content": [
                  {
                    "type": "heading",
                    "attrs": {"level": 3},
                    "content": [{"type": "text", "text": "üîÑ Progress Update"}]
                  },
                  {
                    "type": "paragraph",
                    "content": [
                      {"type": "text", "text": "Status: ", "marks": [{"type": "strong"}]},
                      {"type": "text", "text": "Testing update operations"}
                    ]
                  },
                  {
                    "type": "paragraph",
                    "content": [
                      {"type": "text", "text": "Completed Steps:", "marks": [{"type": "strong"}]}
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [{
                          "type": "paragraph",
                          "content": [{"type": "text", "text": "‚úÖ Ticket created"}]
                        }]
                      },
                      {
                        "type": "listItem",
                        "content": [{
                          "type": "paragraph",
                          "content": [{"type": "text", "text": "‚úÖ First comment added"}]
                        }]
                      },
                      {
                        "type": "listItem",
                        "content": [{
                          "type": "paragraph",
                          "content": [{"type": "text", "text": "‚è≥ More updates coming..."}]
                        }]
                      }
                    ]
                  }
                ]
              }
            }'
          
          echo "‚úÖ Detailed comment added"
          sleep 2

      - name: UPDATE 3 - Update Labels
        if: github.event.inputs.operation == 'update_labels' || github.event.inputs.operation == 'all_updates'
        run: |
          echo "üè∑Ô∏è UPDATE Operation: Updating labels..."
          
          TICKET="${{ env.TEST_TICKET }}"
          
          curl -s -X PUT \
            "https://api.atlassian.com/ex/jira/${{ secrets.ATLASSIAN_CLOUD_ID }}/rest/api/3/issue/$TICKET" \
            -H "Authorization: Bearer ${{ secrets.ATLASSIAN_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "fields": {
                "labels": ["oauth-tested", "automated", "update-test", "verified"]
              }
            }'
          
          echo "‚úÖ Labels updated: oauth-tested, automated, update-test, verified"
          sleep 2

      - name: UPDATE 4 - Update Description
        if: github.event.inputs.operation == 'update_description' || github.event.inputs.operation == 'all_updates'
        run: |
          echo "üìù UPDATE Operation: Updating description..."
          
          TICKET="${{ env.TEST_TICKET }}"
          
          curl -s -X PUT \
            "https://api.atlassian.com/ex/jira/${{ secrets.ATLASSIAN_CLOUD_ID }}/rest/api/3/issue/$TICKET" \
            -H "Authorization: Bearer ${{ secrets.ATLASSIAN_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "fields": {
                "description": {
                  "type": "doc",
                  "version": 1,
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [{
                        "type": "text",
                        "text": "üîÑ DESCRIPTION UPDATED via OAuth 2.0",
                        "marks": [{"type": "strong"}]
                      }]
                    },
                    {
                      "type": "paragraph",
                      "content": [{
                        "type": "text",
                        "text": "This description was updated by automated workflow to demonstrate update capabilities."
                      }]
                    },
                    {
                      "type": "paragraph",
                      "content": [{
                        "type": "text",
                        "text": "Updated at: '"$(date)"'",
                        "marks": [{"type": "em"}]
                      }]
                    }
                  ]
                }
              }
            }'
          
          echo "‚úÖ Description updated"
          sleep 2

      - name: UPDATE 5 - Get Available Transitions
        if: github.event.inputs.operation == 'change_status' || github.event.inputs.operation == 'all_updates'
        id: transitions
        run: |
          echo "üîç Getting available status transitions..."
          
          TICKET="${{ env.TEST_TICKET }}"
          
          TRANS=$(curl -s -X GET \
            "https://api.atlassian.com/ex/jira/${{ secrets.ATLASSIAN_CLOUD_ID }}/rest/api/3/issue/$TICKET/transitions" \
            -H "Authorization: Bearer ${{ secrets.ATLASSIAN_ACCESS_TOKEN }}")
          
          echo "Available transitions for $TICKET:"
          echo "$TRANS" | jq '.transitions[] | {id: .id, name: .name}'
          
          # Get first transition ID
          TRANS_ID=$(echo "$TRANS" | jq -r '.transitions[0].id // empty')
          echo "TRANS_ID=$TRANS_ID" >> $GITHUB_OUTPUT
          
          if [ -z "$TRANS_ID" ]; then
            echo "‚ö†Ô∏è No transitions available (ticket might already be in final state)"
          fi

      - name: UPDATE 6 - Change Status
        if: (github.event.inputs.operation == 'change_status' || github.event.inputs.operation == 'all_updates') && steps.transitions.outputs.TRANS_ID != ''
        run: |
          echo "üîÑ UPDATE Operation: Changing ticket status..."
          
          TICKET="${{ env.TEST_TICKET }}"
          TRANS_ID="${{ steps.transitions.outputs.TRANS_ID }}"
          
          if [ ! -z "$TRANS_ID" ]; then
            curl -s -X POST \
              "https://api.atlassian.com/ex/jira/${{ secrets.ATLASSIAN_CLOUD_ID }}/rest/api/3/issue/$TICKET/transitions" \
              -H "Authorization: Bearer ${{ secrets.ATLASSIAN_ACCESS_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{"transition": {"id": "'"$TRANS_ID"'"}}'
            
            echo "‚úÖ Status changed successfully"
          else
            echo "‚ö†Ô∏è Skipped - no transitions available"
          fi
          
          sleep 2

      - name: UPDATE 7 - Add Final Summary Comment
        if: github.event.inputs.operation == 'all_updates'
        run: |
          echo "üìä Adding final summary comment..."
          
          TICKET="${{ env.TEST_TICKET }}"
          
          curl -s -X POST \
            "https://api.atlassian.com/ex/jira/${{ secrets.ATLASSIAN_CLOUD_ID }}/rest/api/3/issue/$TICKET/comment" \
            -H "Authorization: Bearer ${{ secrets.ATLASSIAN_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "body": {
                "type": "doc",
                "version": 1,
                "content": [
                  {
                    "type": "heading",
                    "attrs": {"level": 3},
                    "content": [{"type": "text", "text": "‚úÖ All Update Operations Completed"}]
                  },
                  {
                    "type": "paragraph",
                    "content": [{
                      "type": "text",
                      "text": "Successfully tested:"
                    }]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [{
                          "type": "paragraph",
                          "content": [{"type": "text", "text": "‚úÖ Add comments"}]
                        }]
                      },
                      {
                        "type": "listItem",
                        "content": [{
                          "type": "paragraph",
                          "content": [{"type": "text", "text": "‚úÖ Update labels"}]
                        }]
                      },
                      {
                        "type": "listItem",
                        "content": [{
                          "type": "paragraph",
                          "content": [{"type": "text", "text": "‚úÖ Update description"}]
                        }]
                      },
                      {
                        "type": "listItem",
                        "content": [{
                          "type": "paragraph",
                          "content": [{"type": "text", "text": "‚úÖ Change status"}]
                        }]
                      }
                    ]
                  },
                  {
                    "type": "paragraph",
                    "content": [{
                      "type": "text",
                      "text": "üîê All operations performed via OAuth 2.0 app-based authentication",
                      "marks": [{"type": "em"}]
                    }]
                  }
                ]
              }
            }'
          
          echo "‚úÖ Summary comment added"

      - name: Final Summary
        if: always()
        run: |
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          echo "üìä UPDATE OPERATIONS TEST COMPLETE"
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          echo ""
          echo "Ticket: ${{ env.TEST_TICKET }}"
          echo ""
          echo "‚úÖ Operations Tested:"
          echo "   1. Add comments (simple & detailed)"
          echo "   2. Update labels"
          echo "   3. Update description"
          echo "   4. Change status (workflow transitions)"
          echo ""
          echo "üîê Authentication: OAuth 2.0 (App-Based)"
          echo "‚ö° All updates work seamlessly!"
          echo ""
          echo "üí° Real-World Use Cases:"
          echo "   ‚Ä¢ CVE remediation progress tracking"
          echo "   ‚Ä¢ Deployment status updates"
          echo "   ‚Ä¢ Infrastructure script results"
          echo "   ‚Ä¢ Automated ticket lifecycle management"
          echo ""
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
